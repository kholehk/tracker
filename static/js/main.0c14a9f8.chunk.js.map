{"version":3,"sources":["actions/trackersActions.js","utils/types.js","components/Button.jsx","components/Form.jsx","components/Item.jsx","components/List.jsx","App.jsx","reducers/trackersReducer.js","reducers/index.js","index.jsx"],"names":["trackersStorage","GET_TRACKERS","POST_TRACKER","DEL_TRACKER","PAUSE_PLAY_TRACKER","readTrackers","dispatch","data","JSON","parse","localStorage","getItem","Array","isArray","Error","error","setItem","type","payload","storage","createTracker","tracker","postTracker","deleteTracker","delTracker","pausedPLayingTracker","pausePlayTracker","buttonType","Object","freeze","submit","icon","isSubmit","play","pause","remove","trackerType","title","start","isPlay","intervals","Button","style","handleTracker","margin","color","className","onClick","event","connect","state","trackers","initNewTracker","useState","newTracker","setNewTracker","action","onSubmit","preventDefault","trim","Date","now","placeholder","name","value","id","onChange","target","handleInputChange","momentDurationFormatSetup","moment","idx","hasPassed","prevInterval","reduce","acc","cur","time","setTime","pauseplayButton","setPauseplayButton","useEffect","duration","format","setNow","setInterval","map","App","initialState","rootReducer","combineReducers","pushInterval","actions","filter","stringify","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c14a9f8.chunk.js","sourcesContent":["const trackersStorage = 'MY_LOCAL_TRACKERS';\n\nexport const GET_TRACKERS = 'GET_TRACKERS';\nexport const POST_TRACKER = 'POST_TRACKER';\nexport const DEL_TRACKER = 'DEL_TRACKER';\nexport const PAUSE_PLAY_TRACKER = 'PAUSE_PLAY_TRACKER';\n\nexport const getTrackers = (trackers) => ({\n  type: GET_TRACKERS,\n  payload: trackers,\n  storage: trackersStorage,\n});\n\nexport const postTracker = (tracker) => ({\n  type: POST_TRACKER,\n  payload: tracker,\n  storage: trackersStorage,\n});\n\nexport const delTracker = (tracker) => ({\n  type: DEL_TRACKER,\n  payload: tracker,\n  storage: trackersStorage,\n});\n\nexport const pausePlayTracker = (tracker) => ({\n  type: PAUSE_PLAY_TRACKER,\n  payload: tracker,\n  storage: trackersStorage,\n});\n\nexport function readTrackers() {\n  return (dispatch) => {\n    let data = [];\n\n    try {\n      data = JSON.parse(localStorage.getItem(trackersStorage));\n\n      if (!Array.isArray(data)) throw new Error('The trackers create array in local Storage');\n    } catch (error) {\n      localStorage.setItem(trackersStorage, '[]');\n    }\n\n    dispatch(getTrackers(data));\n  };\n}\n\nexport function createTracker(tracker) {\n  return (dispatch) => {\n    dispatch(postTracker(tracker));\n  };\n}\n\nexport function deleteTracker(tracker) {\n  return (dispatch) => {\n    dispatch(delTracker(tracker));\n  };\n}\n\nexport function pausedPLayingTracker(tracker) {\n  return (dispatch) => {\n    dispatch(pausePlayTracker(tracker));\n  };\n}\n","const buttonType = Object.freeze({\n  submit: { icon: 'play_circle', isSubmit: true },\n  play: { icon: 'play_circle_outline' },\n  pause: { icon: 'pause_circle_outline' },\n  remove: { icon: 'remove_circle_outline' },\n});\n\nconst trackerType = Object.freeze({\n  title: '', start: null, isPlay: true, intervals: [],\n});\n\nexport { buttonType, trackerType };\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction Button({\n  type, style, handleTracker,\n}) {\n  const { margin, color } = style;\n  const { isSubmit, icon } = type;\n\n  return (\n    <button\n      className={`button circle ${margin}`}\n      type={isSubmit ? 'submit' : 'button'}\n      onClick={(event) => handleTracker && handleTracker(event)}\n    >\n      <i className={`material-icons icon circle ${color}`}>\n        {icon}\n      </i>\n    </button>\n  );\n}\n\nexport default Button;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createTracker } from '../actions/trackersActions';\nimport { buttonType, trackerType } from '../utils/types';\nimport Button from './Button';\n\nfunction Form({ dispatch }) {\n  const initNewTracker = { ...trackerType };\n  const [newTracker, setNewTracker] = useState(initNewTracker);\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setNewTracker({ ...newTracker, [name]: value });\n  };\n\n  return (\n    <form\n      action=\"#\"\n      className=\"input-group circle\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        const title = newTracker.title.trim() || 'No name tracker';\n        const start = Date.now();\n        dispatch(createTracker({\n          ...newTracker, title, start,\n        }));\n        setNewTracker(initNewTracker);\n      }}\n    >\n      <input\n        placeholder=\"Enter tracker name\"\n        type=\"text\"\n        name=\"title\"\n        value={newTracker.title}\n        id=\"new-tracker\"\n        className=\"input circle\"\n        onChange={(event) => handleInputChange(event)}\n      />\n      <Button\n        type={buttonType.submit}\n        style={{ margin: '', color: 'green' }}\n      />\n    </form>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  trackers: state.trackers.trackers,\n});\n\nexport default connect(mapStateToProps)(Form);\n","/* eslint-disable react/prop-types */\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { deleteTracker, pausedPLayingTracker } from '../actions/trackersActions';\nimport { buttonType } from '../utils/types';\nimport Button from './Button';\n\nmomentDurationFormatSetup(moment);\n\nfunction Item({\n  dispatch, idx, now, tracker,\n}) {\n  const hasPassed = (start) => {\n    const prevInterval = tracker.intervals.reduce((acc, cur) => (acc + cur), 0);\n    return tracker.isPlay ? (Date.now() - start + prevInterval) : prevInterval;\n  };\n  const [time, setTime] = useState(hasPassed(tracker.start));\n  const [pauseplayButton, setPauseplayButton] = useState(buttonType.pause);\n\n  useEffect(() => setTime(hasPassed(tracker.start)), [now]);\n\n  useEffect(\n    () => setPauseplayButton(tracker.isPlay ? buttonType.pause : buttonType.play),\n    [tracker],\n  );\n\n  const handlePausePlayTracker = () => {\n    dispatch(pausedPLayingTracker(tracker));\n  };\n\n  const handleDeleteTracker = () => {\n    dispatch(deleteTracker(tracker));\n  };\n\n  return (\n    <li className=\"item\">\n      <span className=\"tracker-title\">{`#${idx + 1} ${tracker.title}`}</span>\n      <span className=\"tracker-time ml-1\">\n        {\n          moment.duration(time).format('h:mm:ss')\n        }\n      </span>\n      <Button\n        type={pauseplayButton}\n        style={{ margin: 'ml-1', color: 'black' }}\n        handleTracker={handlePausePlayTracker}\n      />\n      <Button\n        type={buttonType.remove}\n        style={{ margin: 'ml-1', color: 'red' }}\n        handleTracker={handleDeleteTracker}\n      />\n    </li>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  trackers: state.trackers.trackers,\n});\n\nexport default connect(mapStateToProps)(Item);\n","/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { readTrackers } from '../actions/trackersActions';\n\nimport Item from './Item';\n\nfunction List({ dispatch, trackers }) {\n  const [now, setNow] = useState(Date.now());\n\n  setInterval(() => setNow(Date.now()), 1000);\n\n  useEffect(() => {\n    dispatch(readTrackers());\n  }, [dispatch]);\n\n  return (\n    <ul className=\"list\">\n      {trackers.map(\n        (tracker, idx) => (<Item idx={idx} now={now} tracker={tracker} key={tracker.start} />),\n      )}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  trackers: state.trackers.trackers,\n});\n\nexport default connect(mapStateToProps)(List);\n","import React from 'react';\nimport Form from './components/Form';\nimport List from './components/List';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h3>trackers</h3>\n      <Form />\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actions from '../actions/trackersActions';\nimport { trackerType } from '../utils/types';\n\nexport const initialState = {\n  trackers: [],\n};\n\nexport default function trackersReducer(state = initialState, action) {\n  let trackers = [];\n  const { payload } = action;\n  const pushInterval = (tracker) => (\n    payload.isPlay\n      ? [...tracker.intervals, Date.now() - payload.start]\n      : [...tracker.intervals]\n  );\n\n  switch (action.type) {\n    case actions.GET_TRACKERS:\n      trackers = payload.map((tracker) => ({ ...trackerType, ...tracker }));\n      break;\n    case actions.POST_TRACKER:\n      trackers = [payload, ...state.trackers];\n      break;\n    case actions.DEL_TRACKER:\n      trackers = state.trackers.filter((tracker) => (tracker.start !== payload.start));\n      break;\n    case actions.PAUSE_PLAY_TRACKER:\n      trackers = state.trackers.map(\n        (tracker) => ((tracker.start === payload.start)\n          ? {\n            ...tracker,\n            isPlay: !payload.isPlay,\n            start: Date.now(),\n            intervals: pushInterval(payload),\n          }\n          : tracker),\n      );\n      break;\n    default:\n      return state;\n  }\n\n  localStorage.setItem(action.storage, JSON.stringify(trackers));\n  return { trackers };\n}\n","import { combineReducers } from 'redux';\n\nimport trackersReducer from './trackersReducer';\n\nconst rootReducer = combineReducers({\n  trackers: trackersReducer,\n});\n\nexport default rootReducer;\n","import './index.css';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}